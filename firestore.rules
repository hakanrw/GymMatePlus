rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated(); // Any authenticated user can read user profiles
      allow write: if false; // Only firebase-functions can create user data

      allow update: if isOwner(userId) &&
                    isOnlyUpdatingHeightAndWeight();

      function isOnlyUpdatingAllowed() {
        let newData = request.resource.data;
        let oldData = resource.data;

        // Ensure only height and weight are present in the update
        return newData.keys().hasOnly(oldData.keys()) && // no new fields added
               newData.diff(oldData).affectedKeys().hasOnly(['height', 'weight']);
      }
    }

    // Conversations collection
    match /conversations/{conversationId} {
      allow read: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;
      allow create: if isAuthenticated() && 
        request.auth.uid in request.resource.data.participants;
      allow update: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;
      allow delete: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;

      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isAuthenticated() && 
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        allow create: if isAuthenticated() && 
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        allow update: if isAuthenticated() && 
          request.auth.uid == resource.data.senderId;
        allow delete: if isAuthenticated() && 
          request.auth.uid == resource.data.senderId;
      }
    }

    // Gyms collection
    match /gyms/{gymId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only admin can modify gyms
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
